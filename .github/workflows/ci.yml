name: Node CI Suite

on:
  push

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn --frozen-lockfile --network-timeout 1000000
      - run: yarn test

  acceptance:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest, macos-latest]
    environment: AcceptanceTests
    env:
      RUN_ACCEPTANCE_TESTS: true
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: yarn --frozen-lockfile --network-timeout 1000000
      - name: Build packages
        run: yarn lerna run prepack
      - run: ./bin/run whoami
      - run: yarn lerna run test:acceptance

  publish-npm:
    runs-on: ubuntu-latest
    needs: [test, acceptance]
    if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v' )
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - run: yarn --frozen-lockfile --network-timeout 1000000
      - name: publish to NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_KEY }}
        run: scripts/publish-release

  release:
    runs-on: ubuntu-latest
    needs: [publish-npm]
    if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v' )
    steps:
      - uses: oclif/github-workflows/.github/actions/getPreReleaseTag@main
        id: distTag
      - name: trigger pack-and-release.yml
        uses: ./.github/workflows/pack-and-release.yml
        secrets: inherit
        with:
          channel: ${steps.distTag.outputs.tag || 'stable'}
          version: ${steps.distTag.outputs.version}

  # dummy job needed to pass changeling compliance because it only watches one build
  done:
    runs-on: macos-latest
    needs: [test, acceptance]
    steps:
      - run: echo done
        working-directory: /
